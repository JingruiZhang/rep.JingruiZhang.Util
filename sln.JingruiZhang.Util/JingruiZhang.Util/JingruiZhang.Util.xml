<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JingruiZhang.Util</name>
    </assembly>
    <members>
        <member name="T:JingruiZhang.Util.ObjectExtension">
            <summary>
            Object 扩展方法
            </summary>
        </member>
        <member name="M:JingruiZhang.Util.ObjectExtension.Serialize(System.Object)">
            <summary>
            对象序列化为字符串。.netFramework 及 .netstandard 分别进行实现
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:JingruiZhang.Util.ObjectExtension.ToInt32(System.Object,System.Int32)">
            <summary>
            object 转 Int32
            </summary>
        </member>
        <member name="M:JingruiZhang.Util.ObjectExtension.ToDouble(System.Object,System.Double)">
            <summary>
            object 转 double
            </summary>
        </member>
        <member name="M:JingruiZhang.Util.ObjectExtension.ToGuid(System.Object,System.Guid)">
            <summary>
            object 转 Guid
            </summary>
        </member>
        <member name="M:JingruiZhang.Util.ObjectExtension.ToDateTime(System.Object,System.DateTime)">
            <summary>
            object 转 DateTime
            </summary>
        </member>
        <member name="T:JingruiZhang.Util.StringExtension">
            <summary>
            String 扩展方法
            </summary>
        </member>
        <member name="M:JingruiZhang.Util.StringExtension.EncryptByAES(System.String,System.String,System.String)">
            <summary>
            AES 加密字符串
            </summary>
            <param name="input">被加密的字符串</param>
            <param name="key">加密key，如果长度小于16则自身叠加</param>
            <param name="AES_IV">AES 算法中指定的 AES_IV</param>
            <returns></returns>
        </member>
        <member name="M:JingruiZhang.Util.StringExtension.DecryptByAES(System.String,System.String,System.String)">
            <summary>
            AES 字符串解密
            </summary>
            <param name="input">加密后的字符串</param>
            <param name="key">加密key，如果长度小于16则自身叠加</param>
            <param name="AES_IV">AES 算法中指定的 AES_IV</param>
            <returns></returns>
        </member>
        <member name="M:JingruiZhang.Util.StringExtension.Deserialize``1(System.String)">
            <summary>
            字符串反序列化为对象。.netFramework 及 .netstandard 分别进行实现
            </summary>
            <typeparam name="T"></typeparam>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:JingruiZhang.Util.StringExtension.Deserialize``1(System.String,System.Int32)">
            <summary>
            字符串反序列化为对象。.netFramework 及 .netstandard 分别进行实现
            </summary>
            <typeparam name="T"></typeparam>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:JingruiZhang.Util.StringExtension.ToInt32(System.String,System.Int32)">
            <summary>
            字符串转 Int32
            </summary>
            <param name="input">输入的字符串，可以为null</param>
            <param name="defaultValue">当字符串不能成功地转为 Int32 时，指定的值</param>
            <returns></returns>
        </member>
        <member name="M:JingruiZhang.Util.StringExtension.ToDouble(System.String,System.Double)">
            <summary>
            字符串转 double
            </summary>
            <param name="input">输入的字符串，可以为null</param>
            <param name="defaultValue">当字符串不能成功地转为 double 时，指定的值</param>
            <returns></returns>
        </member>
        <member name="M:JingruiZhang.Util.StringExtension.ToGuid(System.String,System.Guid)">
            <summary>
            字符串转 Guid
            </summary>
            <param name="input">输入的字符串，可以为null</param>
            <param name="defaultValue">当字符串不能成功地转为 double 时，指定的值</param>
            <returns></returns>
        </member>
        <member name="M:JingruiZhang.Util.StringExtension.ToDateTime(System.String,System.DateTime)">
            <summary>
            字符串转 DateTime
            </summary>
            <param name="input">输入的字符串，可以为null</param>
            <param name="defaultValue">当字符串不能成功地转为 double 时，指定的值</param>
            <returns></returns>
        </member>
        <member name="M:JingruiZhang.Util.StringExtension.ByteArrayToHexString(System.Byte[])">
            <summary>
            将一个byte数组转换成一个格式化的16进制字符串
            </summary>
            <param name="data">byte数组</param>
            <returns>格式化的16进制字符串</returns>
        </member>
        <member name="M:JingruiZhang.Util.StringExtension.HexStringToByteArray(System.String)">
            <summary>
            将指定的16进制字符串转换为byte数组
            </summary>
            <param name="s">16进制字符串(如：“7F 2C 4A”或“7F2C4A”都可以)</param>
            <returns>16进制字符串对应的byte数组</returns>
        </member>
        <member name="T:JingruiZhang.Util.ZFileHelper">
            <summary>
            文件操作帮助类
            </summary>
        </member>
        <member name="M:JingruiZhang.Util.ZFileHelper.CompressSelected(System.String,System.Collections.Generic.List{System.String},System.String)">
            <summary>
            压缩多个文件项（文件或文件夹）方法
            </summary>
            <param name="parentDirPath">当前多选项所处于的父目录（末尾需要确保有“\”）</param>
            <param name="multiSelectedDirOrFiles">多个文件或文件夹的物理路径，每一项末尾不要有“\”</param>
            <param name="GzipFileName">目标zip文件物理路径</param>
        </member>
        <member name="M:JingruiZhang.Util.ZFileHelper.CopyDir(System.String,System.String)">
            <summary>
            拷贝文件夹
            </summary>
            <param name="resource">该目录是已存在的，如：C:\A\Dir1</param>
            <param name="dest">该目录是拷贝后才存在的，如:C:\B\Dir1</param>
        </member>
        <member name="M:JingruiZhang.Util.ZFileHelper.WriteToNewPath(System.String,System.Byte[],System.IO.FileMode,System.IO.FileAccess)">
            <summary>
            将指定 bytes 写入到新文件
            </summary>
            <param name="newfilePath">指定新文件的路径（文件会自动创建）</param>
            <param name="bytes">文件内容</param>
            <param name="mode">使用枚举值</param>
            <param name="accesscfg">使用枚举值</param>
            <returns></returns>
        </member>
        <member name="M:JingruiZhang.Util.ZFileHelper.ReadFromPath(System.String)">
            <summary>
            读取指定路径的文件内容到 byte[] 中
            </summary>
        </member>
        <member name="M:JingruiZhang.Util.ZFileHelper.SplitLargeFile(System.String,System.String,System.Action{System.String},System.Action,System.Int32)">
            <summary>
            分割大文件
            </summary>
            <param name="srcLocalPath">被分割源文件的物理路径</param>
            <param name="targetPathFormat">分割生成每个文件片的路径格式字符串，如：F:\A_{0}.txt</param>
            <param name="sectionAct">生成每个文件时的回调</param>
            <param name="finishAct">完成时的回调</param>
            <param name="splitFileSize">分隔的每个文件大小</param>
            <returns></returns>
        </member>
        <member name="M:JingruiZhang.Util.ZFileHelper.MergeSplitFiles(System.Collections.Generic.List{System.String},System.String,System.Action)">
            <summary>
            合并被分割的多个文件
            </summary>
            <param name="splitFiles">被分割的多个文件</param>
            <param name="targetPath">合并后的物理路径</param>
            <param name="finishAct">完成时的回调</param>
            <returns></returns>
        </member>
        <member name="T:JingruiZhang.Util.ZHttpHelper">
            <summary>
            模拟 http 客户端发送请求帮助类
            </summary>
        </member>
        <member name="M:JingruiZhang.Util.ZHttpHelper.Get(System.String,System.String@)">
            <summary>
            发送 get 请求
            </summary>
            <param name="url">请求地址</param>
            <param name="statusCode">请求响应状态码</param>
            <returns>请求返回的数据</returns>
        </member>
        <member name="M:JingruiZhang.Util.ZHttpHelper.Post_Text(System.String,System.String)">
            <summary>
            发送 post 请求，在post中对应的 Content-Type 为：raw, Text。
            </summary>
            <param name="url">post地址</param>
            <param name="jsonstr">Text内容</param>
            <returns>请求返回的数据</returns>
        </member>
        <member name="M:JingruiZhang.Util.ZHttpHelper.Post_Json(System.String,System.String)">
            <summary>
            发送 post 请求，在post中对应的 Content-Type 为：raw, json。
            </summary>
            <param name="url">post地址</param>
            <param name="jsonstr">Text内容</param>
            <returns>请求返回的数据</returns>
        </member>
        <member name="M:JingruiZhang.Util.ZHttpHelper.Post(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            发送 post 请求（不带文件），常用于form-data
            </summary>
            <param name="url">请求地址</param>
            <param name="datas">post的数据</param>
            <returns></returns>
        </member>
        <member name="M:JingruiZhang.Util.ZHttpHelper.Post_WithFile(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            发送 post 请求（带文件）
            </summary>
            <param name="url">post 目标地址</param>
            <param name="datas">普通 name 及值</param>
            <param name="filenameAndPaths">文件的name及文件路径</param>
            <param name="boundary">可不传</param>        
        </member>
        <member name="M:JingruiZhang.Util.ZHttpHelper.Post_Query_Cookie(System.String,System.String,System.String)">
            <summary>
            发送 post 请求，适用于地址带有 QueryString 的地址，且需要使用 Cookie 字符串
            </summary>
            <param name="Url">请求地址</param>
            <param name="postQueryPara">请参考可选参数值</param>
            <param name="cookieStrLikePostman">请参考可选参数值</param>
            <returns></returns>
        </member>
        <member name="M:JingruiZhang.Util.ZHttpHelper.Post_WithFile_Cookie(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String)">
            <summary>
            参考 Post_Query_Cookie 的测试方法
            </summary>
        </member>
        <member name="M:JingruiZhang.Util.ZHttpHelper.Get_Cookie(System.String,System.String)">
            <summary>
            参考 Post_Query_Cookie 的测试方法
            </summary>
            <param name="Url"></param>
            <param name="cookies"></param>
            <returns></returns>
        </member>
        <member name="M:JingruiZhang.Util.ZHttpHelper.Get_Bytes_Cookie(System.String,System.String,System.String)">
            <summary>
            get 请求（携带cookiestr）下载并获取 byte[]（配合 CreateDownloadBytesResponse 使用）
            </summary>
            <param name="Url">下载地址</param>
            <param name="cookies">cookie字符串（参考postman）</param>
            <param name="contentType">默认为二进制文件</param>
        </member>
        <member name="M:JingruiZhang.Util.ZHttpHelper.Delete_Query_Cookie(System.String,System.String,System.String)">
            <summary>
            发送 delete 请求，适用于地址带有 QueryString 的地址，且需要使用 Cookie 字符串
            </summary>
            <param name="Url">请求地址</param>
            <param name="postQueryPara">请参考可选参数值</param>
            <param name="cookieStrLikePostman">请参考可选参数值</param>
            <returns></returns>
        </member>
        <member name="T:JingruiZhang.Util.ZImageHelper">
            <summary>
            Image 帮助类
            </summary>
        </member>
        <member name="M:JingruiZhang.Util.ZImageHelper.GetImageMD5(System.Drawing.Image)">
            <summary>
            获取 Image 对象的 MD5
            </summary>
            <param name="img"></param>
            <returns></returns>
        </member>
        <member name="M:JingruiZhang.Util.ZImageHelper.ImageToBase64String(System.Drawing.Image,System.Drawing.Imaging.ImageFormat)">
            <summary>
            Image 转为 base64编码的文本
            </summary>
            <param name="bmp">待转的Bitmap</param>
            <returns>转换后的base64字符串</returns>
        </member>
        <member name="M:JingruiZhang.Util.ZImageHelper.Idispose_BigToSmallImage(System.Int32,System.Int32,System.Drawing.Image,System.Drawing.Drawing2D.InterpolationMode,System.Drawing.Drawing2D.SmoothingMode)">
            <summary>
            按照指定的高和宽生成缩略图
            </summary>
            <param name="width">指定宽度</param>
            <param name="height">指定高度</param>
            <param name="imageFrom">原图片</param>
            <returns>返回新生成的图</returns>
        </member>
        <member name="M:JingruiZhang.Util.ZImageHelper.Idispose_FromJSBase64(System.String)">
            <summary>
            将 base64 字符串转为 Image 对象（Image对象在使用后记得dispose)
            </summary>
            <param name="JSBase64">以data:image/jpeg;base64...开头的字符串</param>
            <returns>需要使用和进行Dispose的Image对象</returns>
        </member>
        <member name="M:JingruiZhang.Util.ZImageHelper.GetExtensionName(System.String)">
            <summary>
            获取指定图片 base64 的扩展名
            </summary>
            <param name="imageBase64">指定图片的 base64</param>
            <returns>扩展名（不包含.）</returns>
        </member>
        <member name="T:JingruiZhang.Util.ZJPushHelper">
            <summary>
            极光推送
            </summary>
        </member>
        <member name="M:JingruiZhang.Util.ZJPushHelper.Push(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.Object,System.Boolean,System.String)">
            <summary>
            按别名推送消息
            </summary>
            <param name="appKey">appKey</param>
            <param name="masterSecret">masterSecret</param>
            <param name="alias">多个别名</param>
            <param name="allalert">推送的内容：【2020-04-27 11:39:42】【XXX】于项目【XXX】中添加了问题【sss  】</param>
            <param name="androidtitle">问题模块</param>
            <param name="ios_extraobj">额外的数据对象</param>
            <param name="apns_production">是否为生产环境</param>
            <param name="jiguangPostUrl">极光推送api地址</param>
            <returns></returns>
        </member>
        <member name="M:JingruiZhang.Util.ZListHelper.ConcatToString(System.Collections.Generic.List{System.String},System.Char)">
            <summary>
            使用分隔符拼接字符串集合为一个新字符串（拼接后末尾无分隔符）
            </summary>
            <param name="strList">被拼接的字符串集合</param>
            <param name="splitter">分隔符</param>
            <returns></returns>
        </member>
        <member name="T:JingruiZhang.Util.ZMD5Helper">
            <summary>
            计算 MD5 帮助类
            </summary>
        </member>
        <member name="M:JingruiZhang.Util.ZMD5Helper.GetFileMD5(System.String)">
            <summary>
            获取文件 MD5 值
            </summary>
            <param name="fileName">文件路径，如：D:\1.txt </param>
            <returns>MD5值</returns>
        </member>
        <member name="M:JingruiZhang.Util.ZMD5Helper.GetStreamMD5(System.IO.Stream)">
            <summary>
            获取 stream 的MD5 值
            </summary>
            <param name="stream"></param>
            <returns></returns>
        </member>
        <member name="M:JingruiZhang.Util.ZMD5Helper.GetMD5WithString(System.String)">
            <summary>
            得到字符串的 MD5 值
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:JingruiZhang.Util.ZWebAPIHelper">
            <summary>
            WebAPI 帮助类
            </summary>
        </member>
        <member name="M:JingruiZhang.Util.ZWebAPIHelper.GetExcelPackageStream(System.Action{System.IO.MemoryStream})">
            <summary>
            创建 ExcelPackage 内存流，并使用特定方式填充内容
            </summary>
            <param name="saveAction">package.SaveAs(memorystream);</param>
            <returns></returns>
        </member>
        <member name="M:JingruiZhang.Util.ZWebAPIHelper.CreateDownloadResponse(System.IO.Stream,System.String,System.String,System.Net.HttpStatusCode,System.String)">
            <summary>
            创建文件下载的响应消息，调用示例：CreateDownloadResponse(packageMemoryStream, "示例.xlsx", "application/octet-stream")
            </summary>
            <param name="stream">内存流</param>
            <param name="originfilename">文件名称（未EnCode）</param>
            <param name="contenttype">application/octet-stream</param>
            <param name="statuscode">服务器状态码</param>
            <param name="ContentDisposition">响应头Disposition的值</param>
            <returns></returns>
        </member>
        <member name="M:JingruiZhang.Util.ZWebAPIHelper.CreateDownloadBytesResponse(System.Byte[],System.String,System.String,System.Net.HttpStatusCode,System.String)">
            <summary>
            创建文件下载的响应消息，调用示例：CreateDownloadResponse(packageMemoryStream, "示例.xlsx", "application/octet-stream")
            </summary>
            <param name="bytes">内存数据</param>
            <param name="originfilename">文件名称（未EnCode）</param>
            <param name="contenttype">application/octet-stream</param>
            <param name="statuscode">服务器状态码</param>
            <param name="ContentDisposition">响应头Disposition的值</param>
            <returns></returns>
        </member>
        <member name="M:JingruiZhang.Util.ZWebAPIHelper.CreateDataResponse(System.Net.HttpStatusCode,System.Object)">
            <summary>
            返回数据和服务器处理状态
            </summary>
            <param name="code">服务器状态码</param>
            <param name="data">返回业务数据</param>
        </member>
        <member name="M:JingruiZhang.Util.ZWebAPIHelper.CreateDataResponse(System.Net.HttpStatusCode,System.Object,System.Int32,System.String)">
            <summary>
            返回数据和服务器处理状态
            </summary>
            <param name="code">服务器状态码</param>
            <param name="Data">返回业务数据</param>
            <param name="Ret">返回1或负数</param>
            <param name="Msg">OK或错误信息</param>
        </member>
        <member name="M:JingruiZhang.Util.ZWebAPIHelper.CreateDataResponse_Exception(System.Exception)">
            <summary>
            返回数据和服务器处理状态
            </summary>
            <param name="ex">异常对象</param>
        </member>
        <member name="M:JingruiZhang.Util.ZWebAPIHelper.CreateDataResponse_Data(System.Object)">
            <summary>
            返回数据和服务器处理状态
            </summary>
            <param name="data">业务数据对象</param>
        </member>
        <member name="T:JingruiZhang.Util.ZWebSocketBaseApiController">
            <summary>
            具有 WebSocket 功能的基类，目前正在测试 NET45 框架下的功能，DotNetCore 暂未测试；使用时请注意 ApiController 或 ControllerBase 所依赖类库的 nuget 包版本
            </summary>
        </member>
        <member name="F:JingruiZhang.Util.ZWebSocketBaseApiController._sockets">
            <summary>
            记录的客户端
            </summary>
        </member>
        <member name="M:JingruiZhang.Util.ZWebSocketBaseApiController.GetConnect(System.String)">
            <summary>
            连接
            </summary>
            <param name="cname">客户端标识</param>
            <returns></returns>
        </member>
        <member name="M:JingruiZhang.Util.ZWebSocketBaseApiController.ProcessRequestAndResponse(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketReceiveResult)">
            <summary>
            处理接收到的消息，并作响应，参考此库源码来编写重写
            </summary>
        </member>
        <member name="M:JingruiZhang.Util.ZWebSocketBaseApiController.ProcessRequest(System.Web.WebSockets.AspNetWebSocketContext)">
            <summary>
            接受信息和发送信息
            </summary>
        </member>
        <member name="T:JingruiZhang.Util.ZWebSocketClientHelper">
            <summary>
            WebSocket 客户端帮助类
            </summary>
        </member>
        <member name="M:JingruiZhang.Util.ZWebSocketClientHelper.SendMsg(System.String,System.String)">
            <summary>
            连接url，发送广播消息，并断开
            </summary>
            <param name="wsOrWssUrl"></param>
            <param name="data"></param>
        </member>
    </members>
</doc>
